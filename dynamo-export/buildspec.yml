version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.12
      docker: 20
    commands:
      - echo "Installing dependencies..."
      - pip install --upgrade pip
      - pip install poetry
      - echo "Dependencies installed."

  pre_build:
    commands:
      - echo "Starting pre-build phase..."
      - poetry install
      - echo "Dependencies installed."
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo "ECR login succeeded."

  build:
    commands:
      - echo "Starting build phase..."
      - docker build -t $SERVICE_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION .
      - docker tag $SERVICE_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION $ECR_REPO_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo "Docker image built and tagged."

  post_build:
    commands:
      - echo "Starting post-build phase..."
      - docker push $ECR_REPO_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo "Docker image pushed to ECR."

artifacts:
  files:
    - "**/*"
  discard-paths: yes

cache:
  paths:
    - "/root/.cache/pip/**/*"
    - "poetry.lock"
    - ".mypy_cache/**/*"
    - ".pytest_cache/**/*"
